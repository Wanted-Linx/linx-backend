// Code generated by entc, DO NOT EDIT.

package student

const (
	// Label holds the string label denoting the student type in the database.
	Label = "student"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldUniversity holds the string denoting the university field in the database.
	FieldUniversity = "university"
	// FieldProfileLink holds the string denoting the profile_link field in the database.
	FieldProfileLink = "profile_link"
	// FieldProfileImage holds the string denoting the profile_image field in the database.
	FieldProfileImage = "profile_image"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// EdgeClub holds the string denoting the club edge name in mutations.
	EdgeClub = "club"
	// EdgeClubMember holds the string denoting the club_member edge name in mutations.
	EdgeClubMember = "club_member"
	// Table holds the table name of the student in the database.
	Table = "students"
	// UserTable is the table that holds the user relation/edge.
	UserTable = "students"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_student"
	// ClubTable is the table that holds the club relation/edge.
	ClubTable = "clubs"
	// ClubInverseTable is the table name for the Club entity.
	// It exists in this package in order to avoid circular dependency with the "club" package.
	ClubInverseTable = "clubs"
	// ClubColumn is the table column denoting the club relation/edge.
	ClubColumn = "student_club"
	// ClubMemberTable is the table that holds the club_member relation/edge.
	ClubMemberTable = "club_members"
	// ClubMemberInverseTable is the table name for the ClubMember entity.
	// It exists in this package in order to avoid circular dependency with the "clubmember" package.
	ClubMemberInverseTable = "club_members"
	// ClubMemberColumn is the table column denoting the club_member relation/edge.
	ClubMemberColumn = "student_id"
)

// Columns holds all SQL columns for student fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldUniversity,
	FieldProfileLink,
	FieldProfileImage,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "students"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"user_student",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
