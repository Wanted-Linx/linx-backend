// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/Wanted-Linx/linx-backend/api/ent/club"
	"github.com/Wanted-Linx/linx-backend/api/ent/project"
	"github.com/Wanted-Linx/linx-backend/api/ent/projectlog"
	"github.com/Wanted-Linx/linx-backend/api/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	clubFields := schema.Club{}.Fields()
	_ = clubFields
	// clubDescCreatedAt is the schema descriptor for created_at field.
	clubDescCreatedAt := clubFields[5].Descriptor()
	// club.DefaultCreatedAt holds the default value on creation for the created_at field.
	club.DefaultCreatedAt = clubDescCreatedAt.Default.(func() time.Time)
	projectFields := schema.Project{}.Fields()
	_ = projectFields
	// projectDescCreatedAt is the schema descriptor for created_at field.
	projectDescCreatedAt := projectFields[7].Descriptor()
	// project.DefaultCreatedAt holds the default value on creation for the created_at field.
	project.DefaultCreatedAt = projectDescCreatedAt.Default.(func() time.Time)
	projectlogFields := schema.ProjectLog{}.Fields()
	_ = projectlogFields
	// projectlogDescCreatedAt is the schema descriptor for created_at field.
	projectlogDescCreatedAt := projectlogFields[5].Descriptor()
	// projectlog.DefaultCreatedAt holds the default value on creation for the created_at field.
	projectlog.DefaultCreatedAt = projectlogDescCreatedAt.Default.(func() time.Time)
}
